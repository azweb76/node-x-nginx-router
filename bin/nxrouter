#!/usr/bin/env node

var path   = require('path');
var router = require('../lib/router');
var fs     = require('fs');

var argv = require('yargs')
    .usage('Usage: $0 --name <name> [--ip <api>] [--port <port>] [--path <path>] [--nginx <nginx path>]')
    .describe('ip', 'Nginx IP.')
    .describe('port', 'Nginx port number.')
    .describe('path', 'Path to extract files.')
    .describe('nginxPath', 'Path to Nginx config.')
    .describe('portRange.min', 'Minimum port range to use.')
    .describe('portRange.max', 'Maximum port range to use.')
    .describe('respawn.limit', 'Max respawn for given interval.')
    .describe('respawn.interval', 'Number of seconds to wait before respawn.')
    .describe('respawn.limitInterval', 'Number of seconds to wait before respawn if limit is met.')
    .describe('name', 'Name of service.')
    .describe('adminPort', 'Admin port to listen on.')
    .describe('config', 'Path to config file.')
    .help('h')
    .alias('h', 'help')
    .default({ nginx: '/etc/nginx/', port: 80, ip: '127.0.0.1', path: './versions/', adminPort: 11400,
    	portRange: {min: 8000, max: 9000}, respawn: {limit: 50, interval: 5, limitInterval: 60} })
    .argv;

var config = argv;
if(argv.config){
  var p = path.resolve(argv.config);
  config = require(p );
}

config.path = path.resolve(config.path);
config.nginxPath = path.resolve(config.nginxPath);
console.log(config);
var currentContext = null;

process.on('SIGUSR2',function(){
    console.log("Received SIGUSR2 from system");
    router.reload(currentContext);
});

process.on('SIGINT',function(){
    console.log("Received SIGINT from system");
    router.stop();
});

process.on('message', function(m) {
  console.log(m);
});

router.start(config, function(err, ctx){
	currentContext = ctx;
	fs.writeFileSync(path.join(__dirname, 'nxrouter.pid'), process.pid);
});
